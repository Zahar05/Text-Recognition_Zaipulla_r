version: "3.7"

services:
  db:
    image: postgres:14.10
    restart: always
    container_name: Fastapi_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5440:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U kiryarah"]
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    build: .
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    container_name: Fastapi_app
    ports:
      - 8000:8000
    volumes:
      - ./documents:/fastapi/documents
    depends_on:
      db:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    container_name: Fastapi_rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${CELERY_USER}
      - RABBITMQ_DEFAULT_PASS=${CELERY_PASSWORD}
      - RABBITMQ_DEFAULT_HOST=${CELERY_HOST}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    ports:
      - 15672:15672
      - 5672:5672

  celery:
    build: .
    container_name: Fastapi_celery
    command: bash -c "celery -A app.celery_task:celery worker --loglevel=INFO"
    depends_on:
      - rabbitmq

  flower:
    build: .
    container_name: Fastapi_flower
    command: bash -c "celery -A app.celery_task:celery flower"
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq
      - celery
